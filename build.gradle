group 'com.github'
version '1.0-SNAPSHOT'

// 不能放在allprojects 模块内，会造成plugin with id spring-boot not found in parent build.gradle
buildscript {
    repositories {
        mavenLocal() //1.优先查找本地maven库，性能最好
        maven {//2.其次查找aliyun maven库
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        mavenCentral()
        jcenter()
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.6.RELEASE")
        }
    }
}


allprojects { subproj ->

    apply plugin: 'java'
    apply plugin: 'idea'
    apply from: "$rootDir/config.gradle"


    tasks.withType(JavaCompile) {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenLocal() //1.优先查找本地maven库，性能最好
        maven {//2.其次查找aliyun maven库
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        mavenCentral()//3.最后查找maven中央库
    }

    // See: http://docs.oracle.com/javase/8/docs/technotes/tools/windows/javac.html#BHCJCABJ
    compileJava.options*.compilerArgs = [
            '-Xlint:cast',
            '-Xlint:classfile',
            '-Xlint:deprecation',
            '-Xlint:dep-ann',
            '-Xlint:divzero',
            '-Xlint:empty',
            '-Xlint:fallthrough',
            '-Xlint:finally',
            '-Xlint:overrides',
            '-Xlint:path',
            '-Xlint:processing',
            '-Xlint:rawtypes',
            '-Xlint:serial',
            '-Xlint:static',
            '-Xlint:try',
            '-Xlint:unchecked',
            '-Xlint:varargs',
            '-Xlint:-options',
//            '-Werror'
    ]

    // See: http://docs.oracle.com/javase/8/docs/technotes/tools/windows/javac.html#BHCJCABJ
    compileTestJava.options*.compilerArgs = [
            '-Xlint:cast',
            '-Xlint:classfile',
            '-Xlint:deprecation',
            '-Xlint:dep-ann',
            '-Xlint:divzero',
            '-Xlint:empty',
            '-Xlint:fallthrough',
            '-Xlint:finally',
            '-Xlint:path',
            '-Xlint:processing',
            '-Xlint:rawtypes',
            '-Xlint:serial',
            '-Xlint:static',
            '-Xlint:try',
            '-Xlint:unchecked',
            '-Xlint:varargs',
            '-Xlint:-options',
            '-Xlint:-overrides'
    ]

}

subprojects { subproj ->
    apply plugin: 'org.springframework.boot'
    apply plugin: 'application' // 可以运行、安装应用程序并用非“fat jar”方式创建二进制发布版本。
    mainClassName = "com.github.springboot.PracticeApplication"

    compileTestJava {
        options.encoding = 'UTF-8'
        options.compilerArgs += '-parameters'
    }

    dependencies {
        testCompile "junit:junit:${Junit_Version}"
        testCompile "org.projectlombok:lombok:${Lombok_Version}"
        testCompile "org.springframework.boot:spring-boot-starter-test:${SpringBoot_Version}"

        compile "org.projectlombok:lombok:${Lombok_Version}"
        compile "com.google.guava:guava:${Guava_Version}"
        compile "org.slf4j:slf4j-api:${Slf4j_Version}"

    }
}
